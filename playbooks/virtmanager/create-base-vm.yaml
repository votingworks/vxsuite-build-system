- name: Create base VM from ISO
  hosts: localhost
  become: yes

  tasks:

    - name: Allocate 60% of system RAM for the VM
      set_fact:
        vm_ram: "{{ (ansible_facts['memtotal_mb'] * 0.60)|round(0, 'floor')|int }}"

    - name: Allocate 80% of system CPU for the VM
      set_fact:
        vm_cpus: "{{ (ansible_facts['processor_nproc'] * 0.80)|round(0, 'floor')|int }}"

    - name: Download Debian ISO
      get_url: 
        url: "{{ iso_url }}/{{ iso_name }}"
        dest: "{{ virt_image_path }}/{{ iso_name }}"

    - name: See if virt networking is active
      shell: 
        cmd: virsh net-info default | grep Active | grep yes
      register: is_virt_networking_running
      changed_when: no
      ignore_errors: true

    - name: Make sure virt networking is active
      command: virsh net-start default
      when: is_virt_networking_running.rc != 0

    - name: Check if the {{ vm_name }} VM already exists
      shell:
        cmd: virsh dominfo {{ vm_name }}
      register: does_vm_exist
      changed_when: no
      failed_when: does_vm_exist.rc == 0
      ignore_errors: true

    - name: Create VM
      command: >
        virt-install
        --name={{ vm_name }}
        --ram={{ vm_ram }}
        --vcpus={{ vm_cpus }}
        --osinfo linux2022
        --noreboot
        --noautoconsole
        --wait
        --location={{ virt_image_path }}/{{ iso_name }}
        --network bridge=virbr0,model=virtio
        {{ '--boot loader=/usr/share/OVMF/OVMF_CODE_4M.secboot.fd,loader.readonly=yes,loader.type=pflash,loader.secure=yes' if ( secure_boot ) else ' ' }}
        --console pty,target_type=serial
        {{ '--features smm=yes' if ( secure_boot ) else ' ' }}
        --check disk_size=off
        --disk path={{ virt_image_path }}/{{ vm_name }}.img,size={{ vm_disk_size_gb }},format=raw
        --initrd-inject={{ vm_preseed_path }}/{{ vm_preseed_file }}
        --extra-args="auto=true priority=critical preseed/file=/{{ vm_preseed_file }} hostname=vx domain=local console=ttyS0,115200n8 serial"
      register: output
      when: does_vm_exist.rc != 0

