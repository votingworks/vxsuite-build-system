- name: Clone base vm to another
  hosts: localhost
  become: yes

  tasks:

    - name: Add apt_snapshot_date and release_name to vm_name if defined
      set_fact:
        vm_name: "{{ vm_name }}-{{ apt_snapshot_date }}-{{ release_name }}"
      when: apt_snapshot_date is defined and release_name is defined

    - name: See if the VM already exists
      shell:
        cmd: virsh dominfo {{ item }}
      register: does_vm_exist
      changed_when: no
      failed_when: false
      loop: "{{ cloned_images }}"

    - name: Clone VM
      command: >
        virt-clone 
        -o {{ vm_name }} 
        -n {{ item.item }} 
        --auto-clone 
        --check disk_size=off
      register: clone_status
      when: item.rc != 0
      loop: "{{ does_vm_exist.results }}"

    - name: Check for offline VM xml definition
      ansible.builtin.stat:
        path: "/etc/libvirt/qemu/offline.xml"
      register: offline_xml

    - name: Disable networking in offline VM if it exists
      ansible.builtin.lineinfile:
        path: "/etc/libvirt/qemu/offline.xml"
        insertafter: "<interface type='bridge'>"
        line: "  <link state='down'/>"
      when: offline_xml.stat.exists and offline_xml.stat.isreg

    - name: Update the offline VM from new XML definition
      ansible.builtin.command:
        cmd: "virsh define /etc/libvirt/qemu/offline.xml"
      when: offline_xml.stat.exists and offline_xml.stat.isreg
