---

# TODO: install linux-kbuild based on the latest kernel installed
#
- name: Install an updated kernel
  hosts: 127.0.0.1
  connection: local
  become: true

  tasks:
    - import_tasks: shared_tasks/user_to_configure.yaml
    - import_tasks: shared_tasks/well_known_paths.yaml

    - name: Remove unused kernel(s)
      ansible.builtin.command:
        cmd: "apt -y autoremove"
      tags:
        - online

    - name: Add bookworm-backports as an apt source
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list
        line: 'deb http://http.us.debian.org/debian bookworm-backports main'
        insertbefore: "BOF"
      when: apt_snapshot_date is not defined
      tags:
        - online

    - name: Update apt sources to include bookworm-backports
      ansible.builtin.apt:
        update_cache: true
      when: apt_snapshot_date is not defined
      tags:
        - online

    - name: Get the latest linux-base version available in bookworm-backports
      ansible.builtin.shell:
        cmd: "apt-cache madison linux-base | grep backports | sort -k 3 -r | awk '{print $3}' | cut -d'|' -f1 | head -1"
      register: tmp_latest_linux_base_version
      when: apt_snapshot_date is not defined
      tags:
        - online

    - name: Set the linux_base_version variable
      ansible.builtin.set_fact:
        latest_linux_base_version: "{{ tmp_latest_linux_base_version.stdout }}"
      when: apt_snapshot_date is not defined and tmp_latest_linux_base_version is not skipped

    - name: Get the latest linux-base version available in VotingWorks apt repo
      ansible.builtin.shell:
        cmd: "apt-cache madison linux-base | sort -k 3 -r | awk '{print $3}' | cut -d'|' -f1 | head -1"
      register: tmp_latest_linux_base_version
      when: apt_snapshot_date is defined
      tags:
        - online

    - name: Set the linux_base_version variable
      ansible.builtin.set_fact:
        latest_linux_base_version: "{{ tmp_latest_linux_base_version.stdout }}"
      when: apt_snapshot_date is defined and tmp_latest_linux_base_version is not skipped

    - name: Get the latest kernel version available in bookworm-backports
      ansible.builtin.shell:
        cmd: "apt-cache madison linux-image-amd64 | grep backports | sort -k 3 -r | awk '{print $3}' | cut -d'|' -f1 | head -1"
      register: tmp_latest_kernel_version
      when: apt_snapshot_date is not defined
      tags:
        - online

    - name: Set the latest_kernel_version variable
      ansible.builtin.set_fact:
        latest_kernel_version: "{{ tmp_latest_kernel_version.stdout }}"
      when: apt_snapshot_date is not defined and tmp_latest_kernel_version is not skipped

    - name: Get the latest kernel version available in VotingWorks apt repo
      ansible.builtin.shell:
        cmd: "apt-cache madison linux-image-amd64 | sort -k 3 -r | awk '{print $3}' | cut -d'|' -f1 | head -1"
      register: tmp_latest_kernel_version
      when: apt_snapshot_date is defined
      tags:
        - online

    - name: Set the latest_kernel_version variable
      ansible.builtin.set_fact:
        latest_kernel_version: "{{ tmp_latest_kernel_version.stdout }}"
      when: apt_snapshot_date is defined and tmp_latest_kernel_version is not skipped

    - name: Upgrade the kernel packages and dependencies
      ansible.builtin.command:
        cmd: "apt-get install -y --reinstall --install-suggests --no-install-recommends linux-base={{ latest_linux_base_version }} linux-image-amd64={{ latest_kernel_version }} linux-headers-amd64={{ latest_kernel_version }}"
      when: upgrade_kernel
      tags:
        - online

    - name: Remove bookworm-backports as an apt source
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list
        line: 'deb http://http.us.debian.org/debian bookworm-backports main'
        state: absent
      when: apt_snapshot_date is not defined
      tags:
        - online

    - name: Update apt sources to remove bookworm-backports
      ansible.builtin.apt:
        update_cache: true
      when: apt_snapshot_date is not defined
      tags:
        - online

    - name: Remove unused kernel(s)
      ansible.builtin.command:
        cmd: "apt -y autoremove"
      tags:
        - online
