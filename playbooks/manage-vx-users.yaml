---
- name: Manage VX users, groups, and directories
  hosts: 127.0.0.1
  connection: local
  become: true

  vars:
    system_groups:
      vx-group:
        gid: 800

    users:
      vx-services:
        uid: 750
        home: /var/vx/services
        secondary_groups: 'adm,scanner,vx-group'
      vx-ui:
        uid: 751
        home: /var/vx/ui
        secondary_groups: 'adm,lpadmin,plugdev,vx-group'
        sudo_commands:
          - /vx/code/config/admin-functions/timedatectl
          - /usr/bin/brightnessctl
          - /usr/local/bin/tpm2-totp
          - /vx/code/app-scripts/sign.sh
          - /vx/code/app-scripts/mount-usb.sh
          - /vx/code/app-scripts/unmount-usb.sh
          - /bin/efibootmgr
          - /usr/sbin/sfdisk
          - /usr/sbin/mkfs.fat
          - /usr/sbin/mkfs.exfat
      vx-admin:
        uid: 752
        home: /var/vx/admin
        secondary_groups: 'adm,plugdev,vx-group'
        sudo_commands:
          - /vx/admin/admin-functions/set-clock.sh
          - /vx/admin/admin-functions/lockdown.sh
          - /vx/admin/admin-functions/generate-key.sh
          - /vx/admin/admin-functions/setup-boot-entry.sh
          - /vx/admin/admin-functions/create-machine-cert.sh
          - /vx/admin/admin-functions/program-system-administrator-cards.sh
          - /usr/local/bin/tpm2-totp
          - /vx/code/app-scripts/mount-usb.sh
          - /vx/code/app-scripts/unmount-usb.sh

    directories:
      - /vx
      - /var/vx
      - /var/vx/data/module-scan
      - /var/vx/data/module-sems-converter
      - /var/vx/data/admin-service
      - /var/vx/ui
      - /var/vx/admin
      - /var/vx/services

  tasks:
    - name: Manage groups
      ansible.builtin.group:
        name: "{{ item.key }}"
        gid: "{{ item.value.gid }}"
        state: "{{ item.value.state | default('present') }}"
      with_dict:
        - "{{ system_groups }}"

    - name: Manage users
      ansible.builtin.user:
        name: "{{ item.key }}"
        comment: "{{ item.value.comment | default('No Comment') }}"
        uid: "{{ item.value.uid }}"
        groups: "{{ item.value.secondary_groups | default('') }}"
        shell: "{{ item.value.shell | default('/bin/bash') }}"
        home: "{{ item.value.home }}"
        state: "{{ item.value.state | default('present') }}"
      with_dict:
        - "{{ users }}"

    - name: Configure sudoers for users
      community.general.sudoers:
        name: "{{ item.key }}"
        user: "{{ item.key }}"
        runas: root
        nopassword: true
        state: present
        commands: "{{ item.value.sudo_commands }}"
      when: "{{ item.value.sudo_commands is defined }}"
      with_dict:
        - "{{ users }}"

    - name: Create directory structure, don't address permissions yet
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop: "{{ directories }}"
